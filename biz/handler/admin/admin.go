// Code generated by hertz generator.
// package admin provides the admin service handler.

package admin

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"

	"formulago/api/model/admin"
	logic "formulago/biz/logic/admin"
	"formulago/data"
)

// InitDatabase .
// @router /api/initDatabase [GET]
func InitDatabase(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.Empty
	resp := new(admin.BaseResp)
	err = c.BindAndValidate(&req)
	if err != nil {
		resp.ErrCode = admin.ErrCode_Fail
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	err = logic.NewInitDatabase(data.Default().DBClient, data.CasbinEnforcer()).InitDatabase(ctx)
	if err != nil {
		resp.ErrCode = 1
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusInternalServerError, resp)
		return
	}
	resp.ErrCode = admin.ErrCode_Success
	resp.ErrMsg = "success"
	c.JSON(consts.StatusOK, resp)
}

// HealthCheck .
// @router /api/health [GET]
func HealthCheck(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.Empty
	resp := new(admin.BaseResp)
	err = c.BindAndValidate(&req)
	if err != nil {
		resp.ErrCode = admin.ErrCode_Fail
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}

	resp.ErrCode = admin.ErrCode_Success
	resp.ErrMsg = "success"
	c.JSON(consts.StatusOK, resp)
}

// Captcha .
// @router /api/captcha [GET]
func Captcha(ctx context.Context, c *app.RequestContext) {
	var err error
	var req admin.Empty
	resp := new(admin.CaptchaInfoResp)
	err = c.BindAndValidate(&req)
	if err != nil {
		resp.ErrCode = admin.ErrCode_Fail
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}

	// GetCaptcha
	id, b64s, err := logic.NewCaptcha().GetCaptcha()
	resp.ErrCode = admin.ErrCode_Success
	resp.ErrMsg = "success"
	resp.CaptchaID = id
	resp.ImgPath = b64s

	c.JSON(consts.StatusOK, resp)
}
